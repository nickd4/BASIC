; Copyright 2001 Pace Micro Technology plc
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
;> Module header

                               GET     VersionASM
                               GET     Hdr/WorkSpace
                               GET     Hdr/Tokens
                               GET     Hdr/Definitions
                               GET     Hdr:ListOpts
                               GET     Hdr:Macros
                               GET     Hdr:System
                               GET     Hdr:Modhand
                               GET     Hdr:Services
                               GET     Hdr:FSNumbers
                               GET     Hdr:NewErrors
                               GET     Hdr:PaletteV
                               GET     Hdr:Wimp
                               GET     Hdr:ColourTran
                               GET     Hdr:BASICTrans
                               GET     Hdr:Territory
                               GET     Hdr:PublicWS
                               GET     Hdr:Sound
                               GET     Hdr:OsWords
                               GET     Hdr:CPU.Arch

RELEASEVER                     *       1              ;1 for release version: no MANDEL or Roger
OWNERRORS                      *       0              ;1 for error messages in module
CHECKCRUNCH                    *       1              ;1 for BASIC$Crunch check on -quit and LIBRARY, INSTALL etc.
SAFECRUNCH                     *       15             ;15 is a nice safe looking number
LOOKUPHELP                     *       1              ;1 for lookup command help syntax in Resources messages file.
DO32BIT                        *       1              ;1 for 32-bit (and hence not ARM 2/3) compatible

                               GBLS    Name
 [ FPOINT=0
Name                           SETS    "BASIC"
 |
Name                           SETS    "BASIC64"
 ]

        AREA    |BASIC$$Code|, CODE, READONLY, PIC
        ENTRY

Module_BaseAddr                *       .

Basic_ModuleStart
        DCD     MODULEMAIN-Module_BaseAddr
        DCD     0                      ;Basic_Init
        DCD     0                      ;Basic_Die
        DCD     Basic_Services-Module_BaseAddr
        DCD     Basic_Title-Module_BaseAddr
        DCD     Basic_HelpStr-Module_BaseAddr
        DCD     Basic_HC_Table-Module_BaseAddr
        DCD     0
        DCD     0
        DCD     0
        DCD     0
 [ LOOKUPHELP=1
        DCD     Basic_MessageFile-Module_BaseAddr
 |
        DCD     0
 ]
        DCD     Basic_ModuleFlags-Module_BaseAddr

Basic_HC_Table

 [ LOOKUPHELP=1
        Command $Name, 255, 0, International_Help, Basic
        DCB     0
        ALIGN

Basic_MessageFile
        DCB     "Resources:$.Resources.BASIC.Messages",0
Basic_Help
        DCB     "HBASBAS",0
Basic_Syntax
        DCB     "SBASBAS",0
 |
        Command $Name, 255, 0, 0, Basic
        DCB     0
        ALIGN

Basic_Help
        DCB     "$Name. is the ARM BBC BASIC interpreter."
        DCB     13
Basic_Syntax
        DCB     "Syntax: *$Name. [-help|-chain|-load|-quit] <filename>",0
 ]

Basic_Title
        DCB     "$Name.",0

Basic_HelpStr

 [ FPOINT=0
        DCB     "BBC BASIC V",9,"$Module_HelpVersion", 0
 |
        DCB     "BBC BASIC VI",9,"$Module_HelpVersion", 0
 ]
        ALIGN

Basic_ModuleFlags

 [ DO32BIT=1
        DCD     1
 |
        DCD     0
 ]

Basic_ServicesTable
        DCD     0
        DCD     Basic_ServicesBody-Module_BaseAddr
        DCD     Service_Memory
        DCD     0

;In r0 -> rest of command line
;r1 = number of parameters to *ab

Basic_Code
        MOV     R3,R14
        MOV     R2,R0
        MOV     R0,#ModHandReason_Enter
        ADR     R1,Basic_Title
        SWI     XOS_Module
        MOV     PC,R3

        DCD     Basic_ServicesTable-Module_BaseAddr

Basic_Services
        MOV     R0,R0
        CMP     R1,#Service_Memory
        MOVNE   PC,R14

Basic_ServicesBody
        ADR     R12,Basic_ModuleStart
        CMP     R2,R12                 ;R2 contains the address of the currently active object
        ADDHS   R12,R12,#(Basic_End - Basic_ModuleStart):AND:&0000FF
        ADDHS   R12,R12,#(Basic_End - Basic_ModuleStart):AND:&00FF00
        ADDHS   R12,R12,#(Basic_End - Basic_ModuleStart):AND:&FF0000
        CMPHS   R12,R2
        BHS     MOVEMEMORY             ;claim service - it's in us
        MOV     PC,R14

        LNK     BASIC.s
